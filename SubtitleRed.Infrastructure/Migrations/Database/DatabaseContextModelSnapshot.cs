// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SubtitleRed.Infrastructure.DataAccess.Context;

#nullable disable

namespace SubtitleRed.Infrastructure.Migrations.Database
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SubtitleRed.Domain.Lines.Line", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Speaker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Lines");
                });

            modelBuilder.Entity("SubtitleRed.Domain.Locales.LocalizedText", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocaleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("LocalizedTexts");
                });

            modelBuilder.Entity("SubtitleRed.Domain.Scenes.Scene", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Scenes");
                });

            modelBuilder.Entity("SubtitleRed.Domain.Sections.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SceneId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SceneId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("SubtitleRed.Domain.Lines.Line", b =>
                {
                    b.HasOne("SubtitleRed.Domain.Sections.Section", null)
                        .WithMany("Line")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SubtitleRed.Domain.Locales.LocalizedText", b =>
                {
                    b.HasOne("SubtitleRed.Domain.Lines.Line", null)
                        .WithMany("Text")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SubtitleRed.Domain.Sections.Section", b =>
                {
                    b.HasOne("SubtitleRed.Domain.Scenes.Scene", null)
                        .WithMany("Section")
                        .HasForeignKey("SceneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SubtitleRed.Domain.Lines.Line", b =>
                {
                    b.Navigation("Text");
                });

            modelBuilder.Entity("SubtitleRed.Domain.Scenes.Scene", b =>
                {
                    b.Navigation("Section");
                });

            modelBuilder.Entity("SubtitleRed.Domain.Sections.Section", b =>
                {
                    b.Navigation("Line");
                });
#pragma warning restore 612, 618
        }
    }
}
